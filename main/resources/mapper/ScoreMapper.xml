<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hbsfdx.system.mapper.ScoreMapper">
  <resultMap id="BaseResultMap" type="com.hbsfdx.system.pojo.Score">
    <result column="student_id" jdbcType="BIGINT" property="studentId" />
    <result column="course" jdbcType="VARCHAR" property="course" />
    <result column="courseId" jdbcType="BIGINT" property="courseid" />
    <result column="score" jdbcType="BIGINT" property="score" />
    <result column="semester" jdbcType="BIGINT" property="semester" />
    <result column="class_id" jdbcType="BIGINT" property="classId" />
    <result column="term" jdbcType="VARCHAR" property="term" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    student_id, course, courseId, score, semester, class_id, term
  </sql>
  <select id="selectByExample" parameterType="com.hbsfdx.system.pojo.ScoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.hbsfdx.system.pojo.ScoreExample">
    delete from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hbsfdx.system.pojo.Score">
    insert into score (student_id, course, courseId, 
      score, semester, class_id, 
      term)
    values (#{studentId,jdbcType=BIGINT}, #{course,jdbcType=VARCHAR}, #{courseid,jdbcType=BIGINT}, 
      #{score,jdbcType=BIGINT}, #{semester,jdbcType=BIGINT}, #{classId,jdbcType=BIGINT}, 
      #{term,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hbsfdx.system.pojo.Score">
    insert into score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="course != null">
        course,
      </if>
      <if test="courseid != null">
        courseId,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="semester != null">
        semester,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="term != null">
        term,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="course != null">
        #{course,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=BIGINT},
      </if>
      <if test="score != null">
        #{score,jdbcType=BIGINT},
      </if>
      <if test="semester != null">
        #{semester,jdbcType=BIGINT},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=BIGINT},
      </if>
      <if test="term != null">
        #{term,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hbsfdx.system.pojo.ScoreExample" resultType="java.lang.Long">
    select count(*) from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update score
    <set>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=BIGINT},
      </if>
      <if test="record.course != null">
        course = #{record.course,jdbcType=VARCHAR},
      </if>
      <if test="record.courseid != null">
        courseId = #{record.courseid,jdbcType=BIGINT},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=BIGINT},
      </if>
      <if test="record.semester != null">
        semester = #{record.semester,jdbcType=BIGINT},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=BIGINT},
      </if>
      <if test="record.term != null">
        term = #{record.term,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update score
    set student_id = #{record.studentId,jdbcType=BIGINT},
      course = #{record.course,jdbcType=VARCHAR},
      courseId = #{record.courseid,jdbcType=BIGINT},
      score = #{record.score,jdbcType=BIGINT},
      semester = #{record.semester,jdbcType=BIGINT},
      class_id = #{record.classId,jdbcType=BIGINT},
      term = #{record.term,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>